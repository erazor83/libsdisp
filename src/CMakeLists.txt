CMAKE_MINIMUM_REQUIRED(VERSION 2.6)
PROJECT(LIBSDISP)


SET(LIBSDISP_VERSION_MAJOR 1)
SET(LIBSDISP_VERSION_MINOR 1)
SET(LIBSDISP_VERSION_MICRO 3)


SET(BUS_LIBS "i2c/i2c" "../display/sdisp-i2c_common" )

SET(DISPLAY_LIBS)
IF (WITH_DISPLAY_CRIUS)
	SET(DISPLAY_LIBS ${DISPLAY_LIBS} crius)
ENDIF()
IF (WITH_DISPLAY_SSD1306)
	SET(DISPLAY_LIBS ${DISPLAY_LIBS} ssd1306)
ENDIF()
IF (WITH_DISPLAY_SSD1327)
	SET(DISPLAY_LIBS ${DISPLAY_LIBS} ssd1327)
ENDIF()

FOREACH(b ${BUS_LIBS}) 
  SET(BUS_FILES ${BUS_FILES} bus/${b}.c )
ENDFOREACH(b)

SET(DISPLAY_FILES "display/ssd1327" "display/buffer")
FOREACH(d ${DISPLAY_LIBS}) 
  SET(DISPLAY_FILES ${DISPLAY_FILES} display/sdisp-${d}.c)
ENDFOREACH(d)

CONFIGURE_FILE(${CMAKE_CURRENT_SOURCE_DIR}/sdisp_config.h.in ${CMAKE_CURRENT_BINARY_DIR}/sdisp_config.h)

SET(
	CMAKE_C_FLAGS 
	"-I ${CMAKE_CURRENT_SOURCE_DIR} -I ${CMAKE_CURRENT_SOURCE_DIR}/bus -I ${CMAKE_CURRENT_SOURCE_DIR}/bus/i2c/ -I ${CMAKE_CURRENT_SOURCE_DIR}/display/ -g -Wall -std=c99 -fPIC"
)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_BINARY_DIR} -I ${CMAKE_CURRENT_SOURCE_DIR}/bus -I ${CMAKE_CURRENT_SOURCE_DIR}/bus/i2c/ -I ${CMAKE_CURRENT_SOURCE_DIR}/display/) # for generated config.h

MESSAGE(STATUS "libsdisp C_FLAGS: ${CMAKE_C_FLAGS}")


IF (WITH_SWIG_PYTHON)
	MESSAGE("SWIG extension enabled.")
	FIND_PACKAGE(SWIG REQUIRED)
	INCLUDE(${SWIG_USE_FILE})

	FIND_PACKAGE(PythonLibs)
	INCLUDE_DIRECTORIES(${PYTHON_INCLUDE_PATH})

	INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR})

	SET(CMAKE_SWIG_FLAGS "")

	#SET_SOURCE_FILES_PROPERTIES(sdisp.i PROPERTIES SWIG_FLAGS "-fPIC")

	SWIG_ADD_MODULE(sdisp python sdisp.i ${CMAKE_CURRENT_SOURCE_DIR}/sdisp.h)
	SWIG_LINK_LIBRARIES(sdisp sdisp ${PYTHON_LIBRARIES})

ENDIF (WITH_SWIG_PYTHON)


ADD_LIBRARY(sdisp sdisp.c sdisp-private.c ${BUS_FILES} ${DISPLAY_FILES})

IF (WITH_SHARED)
	ADD_LIBRARY(sdisp_shared SHARED sdisp.c sdisp-private.c ${BUS_FILES} ${DISPLAY_FILES})
ENDIF(WITH_SHARED)


INSTALL (FILES sdisp.h sdisp_version.h ${CMAKE_CURRENT_BINARY_DIR}/sdisp_config.h
	DESTINATION include
)
INSTALL (TARGETS sdisp
	LIBRARY DESTINATION lib
	ARCHIVE DESTINATION lib
)

IF (WITH_SHARED)
	INSTALL (TARGETS sdisp_shared
		LIBRARY DESTINATION lib
		ARCHIVE DESTINATION lib
	)
ENDIF (WITH_SHARED)

